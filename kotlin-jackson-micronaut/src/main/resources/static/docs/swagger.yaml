openapi: 3.0.0
info:
  title: test-service
  version: "1"
paths:
  /v2/echo/body_model:
    post:
      operationId: v2EchoEchoBodyModel
      tags:
        - echo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v2.Message'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v2.Message'
        "400":
          description: Service will return this if parameters are not provided or couldn't be parsed correctly
        "500":
          description: Service will return this if unexpected internal error happens
  /echo/body_string:
    post:
      operationId: echoEchoBodyString
      tags:
        - echo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Service will return this if parameters are not provided or couldn't be parsed correctly
        "500":
          description: Service will return this if unexpected internal error happens
  /echo/body_model:
    post:
      operationId: echoEchoBodyModel
      tags:
        - echo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "400":
          description: Service will return this if parameters are not provided or couldn't be parsed correctly
        "500":
          description: Service will return this if unexpected internal error happens
  /echo/body_array:
    post:
      operationId: echoEchoBodyArray
      tags:
        - echo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: Service will return this if parameters are not provided or couldn't be parsed correctly
        "500":
          description: Service will return this if unexpected internal error happens
  /echo/body_map:
    post:
      operationId: echoEchoBodyMap
      tags:
        - echo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "400":
          description: Service will return this if parameters are not provided or couldn't be parsed correctly
        "500":
          description: Service will return this if unexpected internal error happens
  /echo/query:
    get:
      operationId: echoEchoQuery
      tags:
        - echo
      parameters:
        - in: query
          name: int_query
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: long_query
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: float_query
          required: true
          schema:
            type: number
            format: float
        - in: query
          name: double_query
          required: true
          schema:
            type: number
            format: double
        - in: query
          name: decimal_query
          required: true
          schema:
            type: number
            format: decimal
        - in: query
          name: bool_query
          required: true
          schema:
            type: boolean
        - in: query
          name: string_query
          required: true
          schema:
            type: string
        - in: query
          name: string_opt_query
          required: false
          schema:
            type: string
        - in: query
          name: string_defaulted_query
          required: true
          schema:
            type: string
            default: the default value
        - in: query
          name: string_array_query
          required: true
          schema:
            type: array
            items:
              type: string
        - in: query
          name: uuid_query
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: date_query
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: date_array_query
          required: true
          schema:
            type: array
            items:
              type: string
              format: date
        - in: query
          name: datetime_query
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: enum_query
          required: true
          schema:
            $ref: '#/components/schemas/Choice'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameters'
        "400":
          description: Service will return this if parameters are not provided or couldn't be parsed correctly
        "500":
          description: Service will return this if unexpected internal error happens
  /echo/header:
    get:
      operationId: echoEchoHeader
      tags:
        - echo
      parameters:
        - in: header
          name: Int-Header
          required: true
          schema:
            type: integer
            format: int32
        - in: header
          name: Long-Header
          required: true
          schema:
            type: integer
            format: int64
        - in: header
          name: Float-Header
          required: true
          schema:
            type: number
            format: float
        - in: header
          name: Double-Header
          required: true
          schema:
            type: number
            format: double
        - in: header
          name: Decimal-Header
          required: true
          schema:
            type: number
            format: decimal
        - in: header
          name: Bool-Header
          required: true
          schema:
            type: boolean
        - in: header
          name: String-Header
          required: true
          schema:
            type: string
        - in: header
          name: String-Opt-Header
          required: false
          schema:
            type: string
        - in: header
          name: String-Defaulted-Header
          required: true
          schema:
            type: string
            default: the default value
        - in: header
          name: String-Array-Header
          required: true
          schema:
            type: array
            items:
              type: string
        - in: header
          name: Uuid-Header
          required: true
          schema:
            type: string
            format: uuid
        - in: header
          name: Date-Header
          required: true
          schema:
            type: string
            format: date
        - in: header
          name: Date-Array-Header
          required: true
          schema:
            type: array
            items:
              type: string
              format: date
        - in: header
          name: Datetime-Header
          required: true
          schema:
            type: string
            format: date-time
        - in: header
          name: Enum-Header
          required: true
          schema:
            $ref: '#/components/schemas/Choice'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameters'
        "400":
          description: Service will return this if parameters are not provided or couldn't be parsed correctly
        "500":
          description: Service will return this if unexpected internal error happens
  /echo/url_params/{int_url}/{long_url}/{float_url}/{double_url}/{decimal_url}/{bool_url}/{string_url}/{uuid_url}/{date_url}/{datetime_url}/{enum_url}:
    get:
      operationId: echoEchoUrlParams
      tags:
        - echo
      parameters:
        - in: path
          name: int_url
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: long_url
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: float_url
          required: true
          schema:
            type: number
            format: float
        - in: path
          name: double_url
          required: true
          schema:
            type: number
            format: double
        - in: path
          name: decimal_url
          required: true
          schema:
            type: number
            format: decimal
        - in: path
          name: bool_url
          required: true
          schema:
            type: boolean
        - in: path
          name: string_url
          required: true
          schema:
            type: string
        - in: path
          name: uuid_url
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: date_url
          required: true
          schema:
            type: string
            format: date
        - in: path
          name: datetime_url
          required: true
          schema:
            type: string
            format: date-time
        - in: path
          name: enum_url
          required: true
          schema:
            $ref: '#/components/schemas/Choice'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlParameters'
        "400":
          description: Service will return this if parameters are not provided or couldn't be parsed correctly
        "500":
          description: Service will return this if unexpected internal error happens
  /echo/everything/{date_url}/{decimal_url}:
    post:
      operationId: echoEchoEverything
      tags:
        - echo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      parameters:
        - in: path
          name: date_url
          required: true
          schema:
            type: string
            format: date
        - in: path
          name: decimal_url
          required: true
          schema:
            type: number
            format: decimal
        - in: header
          name: Uuid-Header
          required: true
          schema:
            type: string
            format: uuid
        - in: header
          name: Datetime-Header
          required: true
          schema:
            type: string
            format: date-time
        - in: query
          name: float_query
          required: true
          schema:
            type: number
            format: float
        - in: query
          name: bool_query
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Everything'
        "403":
          description: ""
        "400":
          description: Service will return this if parameters are not provided or couldn't be parsed correctly
        "500":
          description: Service will return this if unexpected internal error happens
  /echo/same_operation_name:
    get:
      operationId: echoSameOperationName
      tags:
        - echo
      responses:
        "200":
          description: ""
        "403":
          description: ""
        "500":
          description: Service will return this if unexpected internal error happens
  /check/empty:
    get:
      operationId: checkCheckEmpty
      tags:
        - check
      responses:
        "200":
          description: ""
        "500":
          description: Service will return this if unexpected internal error happens
  /check/empty_response:
    post:
      operationId: checkCheckEmptyResponse
      tags:
        - check
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        "200":
          description: ""
        "400":
          description: Service will return this if parameters are not provided or couldn't be parsed correctly
        "500":
          description: Service will return this if unexpected internal error happens
  /check/forbidden:
    get:
      operationId: checkCheckForbidden
      tags:
        - check
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "403":
          description: ""
        "500":
          description: Service will return this if unexpected internal error happens
  /check/same_operation_name:
    get:
      operationId: checkSameOperationName
      tags:
        - check
      responses:
        "200":
          description: ""
        "403":
          description: ""
        "500":
          description: Service will return this if unexpected internal error happens
components:
  schemas:
    v2.Message:
      type: object
      required:
        - bool_field
        - string_field
      properties:
        bool_field:
          type: boolean
        string_field:
          type: string
    Message:
      type: object
      required:
        - int_field
        - string_field
      properties:
        int_field:
          type: integer
          format: int32
        string_field:
          type: string
    Parameters:
      type: object
      required:
        - int_field
        - long_field
        - float_field
        - double_field
        - decimal_field
        - bool_field
        - string_field
        - string_defaulted_field
        - string_array_field
        - uuid_field
        - date_field
        - date_array_field
        - datetime_field
        - enum_field
      properties:
        int_field:
          type: integer
          format: int32
        long_field:
          type: integer
          format: int64
        float_field:
          type: number
          format: float
        double_field:
          type: number
          format: double
        decimal_field:
          type: number
          format: decimal
        bool_field:
          type: boolean
        string_field:
          type: string
        string_opt_field:
          type: string
        string_defaulted_field:
          type: string
        string_array_field:
          type: array
          items:
            type: string
        uuid_field:
          type: string
          format: uuid
        date_field:
          type: string
          format: date
        date_array_field:
          type: array
          items:
            type: string
            format: date
        datetime_field:
          type: string
          format: date-time
        enum_field:
          $ref: '#/components/schemas/Choice'
    UrlParameters:
      type: object
      required:
        - int_field
        - long_field
        - float_field
        - double_field
        - decimal_field
        - bool_field
        - string_field
        - uuid_field
        - date_field
        - datetime_field
        - enum_field
      properties:
        int_field:
          type: integer
          format: int32
        long_field:
          type: integer
          format: int64
        float_field:
          type: number
          format: float
        double_field:
          type: number
          format: double
        decimal_field:
          type: number
          format: decimal
        bool_field:
          type: boolean
        string_field:
          type: string
        uuid_field:
          type: string
          format: uuid
        date_field:
          type: string
          format: date
        datetime_field:
          type: string
          format: date-time
        enum_field:
          $ref: '#/components/schemas/Choice'
    Everything:
      type: object
      required:
        - body_field
        - float_query
        - bool_query
        - uuid_header
        - datetime_header
        - date_url
        - decimal_url
      properties:
        body_field:
          $ref: '#/components/schemas/Message'
        float_query:
          type: number
          format: float
        bool_query:
          type: boolean
        uuid_header:
          type: string
          format: uuid
        datetime_header:
          type: string
          format: date-time
        date_url:
          type: string
          format: date
        decimal_url:
          type: number
          format: decimal
    Choice:
      type: string
      enum:
        - first_choice
        - second_choice
        - third_choice
